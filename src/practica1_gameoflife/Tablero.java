/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica1_gameoflife;

import java.awt.Color;
import java.awt.GridLayout;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JSlider;

/**
 *
 * @author Juan RigobertoZu√±iga
 */
/*
 *en esta clase recibe un valor N el cual es asignado a una varible
 *la variable es utilizada para crear un areglo de botones de [n][n]
 *la cual va a tener como funcionlidad de tablero en el cual se llevara
 *a cabo la simulacion
*/
public class Tablero extends javax.swing.JFrame {

    /**
     
     */
    public static int n;
    public static boton[][] tabla;
    public static int mat1[][];
    int cont;
    comparaciones hilo1=new comparaciones();
    public Tablero(int n,int matriz[][]) {
        mat1=matriz;
        initComponents();
        boton(n);
    }

    private Tablero() {
        /*throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.*/
    }
    //crea una arreglo de botones recibiendo el tama;o anterior de la casilla
    public void boton(int n){
        int tam=n;
        tabla=new boton[tam][tam];
        jPanel1.setLayout(new GridLayout(tam, tam));
        for(int i=0;i<tabla.length;i++){
            for(int j=0;j<tabla[i].length;j++){
                tabla[i][j]=new boton(i,j,50,50) {};
                jPanel1.add(tabla[i][j]);
                
            }
        }
        jPanel1.updateUI();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSlider1 = new javax.swing.JSlider();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(300, 100));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 199, Short.MAX_VALUE)
        );

        jSlider1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                ajustar(evt);
            }
        });

        jButton1.setText("INICIAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setText("PAUSAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2)))
                .addGap(45, 45, 45))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /*
    este evento inicia el hilo en el cual se encuentran las validaciones que dan 
    el efecto de la simulacion 
    */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //comparaciones hilo1=new comparaciones();
        jButton1.setEnabled(false);
        hilo1.start();
        /*try{
            Thread.sleep(10000+(Tablero.jSlider1.getValue()));
        } catch (InterruptedException ex) {
            Logger.getLogger(Tablero.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_jButton1ActionPerformed
/*
    este evento de boton recibe un contador el cual inicia en cero 
    cada vez que es presionado el conador aumenta de uno en uno teniendo como
    condicion si es igual a 1 pause el hilo y si es igual a 2 reanude la ejecucion
    del hilo de las vvalidaciones
*/
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       // TODO add your handling code here:
       cont++;
       if (cont==1){
          hilo1.suspend();
       }
       if(cont==2){
           hilo1.resume();
           cont=0;
       }
    }//GEN-LAST:event_jButton2ActionPerformed
/*
    este evento del slider obtiene el valor del slider y lo asigna a una varianle de tipo int
    la cual es usada para obtener el valor de velocidad a la cual va a ser ultilizada la simulacion
*/
    
    private void ajustar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajustar
        n=jSlider1.getValue();
        System.out.println("aqui n: "+n);
    }//GEN-LAST:event_ajustar

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tablero().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    public static javax.swing.JSlider jSlider1;
    // End of variables declaration//GEN-END:variables
}

/*
    esta clase hereda del paquete java.io o java.lang no recuerdo la funcionthread
    la cual sera utilizada para crear una ejecucion paralela a la acutal para que se 
    puedan hacer dos acciones al mismo tiempo
    En el metodo run del hilo se programaron la validaciones de las esquinas y bordes
    y las validaciones generales para el tablero igual al centro, tomando en cuenta
    las restricciones
*/
class comparaciones extends Thread {
    
   public comparaciones(){
       
   } 
  @Override
   public void run(){
       //int vel=no;
       int vivos=0;
       while(true){
           for(int i=0;i<Tablero.tabla.length;i++){
                for(int j=0;j<Tablero.tabla[i].length;j++){
                   //comparaciones de las esquinas
                    if(i==0 && j==0){
                        if(Tablero.tabla[i][j].getBackground()==Color.darkGray){//centro o esquina izquierda
                            //muertos=muertos+1;
                            Tablero.mat1[i][j]=1;
                        }//fin comparacion centro p esquina izquierda
                        if(Tablero.tabla[i][j+1].getBackground()==Color.darkGray){//derecha a centro
                            vivos++;
                        }//fin derechaa centro
                        if(Tablero.tabla[i+1][j].getBackground()==Color.darkGray){
                            vivos++;
                        }
                         if(Tablero.tabla[i+1][j+1].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(vivos<2){
                            Tablero.mat1[i][j]=0;
                            vivos=0;
                        }else if(vivos==3){
                            Tablero.mat1[i][j]=1;
                            vivos=0;
                        }else if(vivos>3){
                            Tablero.mat1[i][j]=0;
                            vivos=0;
                        }
                        vivos=0;
                    }
                    /////////////////////////////////////////////////////////////////
                    if(i==0 && j==(Tablero.tabla.length-1)){
                        if(Tablero.tabla[i][j].getBackground()==Color.darkGray){//centro o esquina derecha
                            //muertos=muertos+1;
                            Tablero.mat1[i][j]=1;
                        }//fin comparacion centro p esquina derecha
                        if(Tablero.tabla[i][j-1].getBackground()==Color.darkGray){//derecha a centro
                            vivos++;
                        }//fin derechaa centro
                        if(Tablero.tabla[i+1][j].getBackground()==Color.darkGray){
                            vivos++;
                        }
                         if(Tablero.tabla[i+1][j-1].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(vivos<2){
                            Tablero.mat1[i][j]=0;
                            vivos=0;
                        }else if(vivos==3){
                            Tablero.mat1[i][j]=1;
                            vivos=0;
                        }else if(vivos>3){
                            Tablero.mat1[i][j]=0;
                            vivos=0;
                        }
                        vivos=0;
                    }
                    /////////////////////////////////////////////////////////////////////
                    if(i==(Tablero.tabla.length-1) && j==0){
                        if(Tablero.tabla[i][j].getBackground()==Color.darkGray){//centro o esquina izquierda
                            //muertos=muertos+1;
                            Tablero.mat1[i][j]=1;
                        }//fin comparacion centro p esquina izquierda
                        if(Tablero.tabla[i][j+1].getBackground()==Color.darkGray){//derecha a centro
                          vivos++;
                        }//fin derechaa centro
                        if(Tablero.tabla[i-1][j].getBackground()==Color.darkGray){
                            vivos++;
                        }
                         if(Tablero.tabla[i-1][j+1].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(vivos<2){
                            Tablero.mat1[i][j]=0;
                            vivos=0;
                        }else if(vivos==3){
                            Tablero.mat1[i][j]=1;
                            vivos=0;
                        }else if(vivos>3){
                            Tablero.mat1[i][j]=0;
                            vivos=0;
                        }
                        vivos=0;
                    }
                    /////////////////////////////////////////////////////////////////
                    if(i==(Tablero.tabla.length-1) && j==(Tablero.tabla.length-1)){
                        if(Tablero.tabla[i][j].getBackground()==Color.darkGray){//centro o esquina derecha
                            //muertos=muertos+1;
                            Tablero.mat1[i][j]=1;
                        }//fin comparacion centro p esquina derecha
                        if(Tablero.tabla[i][j-1].getBackground()==Color.darkGray){//derecha a centro
                            vivos++;
                        }//fin derechaa centro
                        if(Tablero.tabla[i-1][j].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(Tablero.tabla[i-1][j-1].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(vivos<2){
                            Tablero.mat1[i][j]=0;
                            vivos=0;
                        }else if(vivos==3){
                            Tablero.mat1[i][j]=1;
                            vivos=0;
                        }else if(vivos>3){
                            Tablero.mat1[i][j]=0;
                            vivos=0;
                        }
                        vivos=0;
                    }
                    ////////////////////////////////////////////////////////////////////
                    //fin comparacion esquinas
                    ////////////////////////////////////////////////////////////////////
                    //inicio comparacion de bordes horizontales
                    //borde horizontal superios
                    if(i==0 && j<(Tablero.tabla.length-1)){
                        int x=i;
                        int n=Tablero.tabla.length-2;
                        for(int y=1;y<=n;y++){
                            if(Tablero.tabla[x][y].getBackground()==Color.darkGray){//centro 
                                Tablero.mat1[i][j]=1;
                            }else{
                                Tablero.mat1[x][y]=0;//vivos=vivos+1; 
                            }//fin comparacion centro 
                            if(Tablero.tabla[x][y-1].getBackground()==Color.darkGray){
                                vivos++;
                            }
                            if(Tablero.tabla[x][y+1].getBackground()==Color.darkGray){
                                vivos++;
                            }
                            if(Tablero.tabla[x+1][y].getBackground()==Color.darkGray){
                                vivos++;
                            }
                            if(Tablero.tabla[x+1][y-1].getBackground()==Color.darkGray){
                                vivos++;
                            }
                            if(Tablero.tabla[x+1][y+1].getBackground()==Color.darkGray){
                                vivos++;
                            }
                            if(vivos<2){
                                Tablero.mat1[x][y]=0;
                                vivos=0;
                            }else if(vivos==3){
                                Tablero.mat1[x][y]=1;
                                vivos=0;
                            }else if(vivos>3){
                                Tablero.mat1[x][y]=0;
                                vivos=0;
                            }
                            vivos=0;
                        }
                    }
                    //fin de la validacion del borde horizontal superior
                    ////////////////////////////////////////////////////
                    //inicio de las vvalidaciones del borde 
                    if(i==(Tablero.tabla.length-1) && j<(Tablero.tabla.length)){
                        int x=i;
                        int n=Tablero.tabla.length-2;
                        for(int y=1;y<=n;y++){
                            if(Tablero.tabla[x][y].getBackground()==Color.darkGray){//centro o esquina derecha
                            //muertos=muertos+1;
                            Tablero.mat1[i][j]=1;
                            }else{
                                Tablero.mat1[x][y]=0;//vivos=vivos+1; 
                            }//fin comparacion centro p esquina derecha
                            if(Tablero.tabla[x][y-1].getBackground()==Color.darkGray){
                                vivos++;
                            }
                            if(Tablero.tabla[x][y+1].getBackground()==Color.darkGray){
                                vivos++;
                            }
                            if(Tablero.tabla[x-1][y].getBackground()==Color.darkGray){
                                vivos++;
                            }
                            if(Tablero.tabla[x-1][y-1].getBackground()==Color.darkGray){
                                vivos++;
                            }
                            if(Tablero.tabla[x-1][y+1].getBackground()==Color.darkGray){
                                vivos++;
                            }
                            if(vivos<2){
                                Tablero.mat1[i][j]=0;
                                vivos=0;
                            }else if(vivos==3){
                                Tablero.mat1[i][j]=1;
                                vivos=0;
                            }else if(vivos>3){
                                Tablero.mat1[i][j]=0;
                                vivos=0;
                            }
                            vivos=0;
                        }
                    }
                    ///////////////////////////////////////////////////////////////////
                    //fin comparacion de bordes horizontales
                    ///////////////////////////////////////////////////////////////////
                    //inicio comparacion bordes verticales
                    //borde vertical derecho
                    if(i>0 && i<Tablero.tabla.length-2 && j==0){
                        if(Tablero.tabla[i][j].getBackground()==Color.darkGray){
                            Tablero.mat1[i][j]=1;
                        }else{
                            Tablero.mat1[i][j]=0;
                        }
                        if(Tablero.tabla[i-1][j].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(Tablero.tabla[i-1][j+1].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(Tablero.tabla[i][j+1].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(Tablero.tabla[i+1][j].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(Tablero.tabla[i+1][j+1].getBackground()==Color.darkGray){
                            vivos++;
                        }
                         if(vivos<2){
                                Tablero.mat1[i][j]=0;
                                vivos=0;
                            }else if(vivos==3){
                                Tablero.mat1[i][j]=1;
                                vivos=0;
                            }else if(vivos>3){
                                Tablero.mat1[i][j]=0;
                                vivos=0;
                            }
                         vivos=0;
                    }
                    //fin borde vertical derecho
                    //////////////////////////////////////////////////////////////
                    //borde vertical izquierdo
                    if(i>0 && i<Tablero.tabla.length-1 && j==Tablero.tabla.length-2){
                        if(Tablero.tabla[i][j].getBackground()==Color.darkGray){
                            Tablero.mat1[i][j]=1;
                        }else{
                            Tablero.mat1[i][j]=0;
                        }
                        if(Tablero.tabla[i-1][j].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(Tablero.tabla[i-1][j-1].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(Tablero.tabla[i][j-1].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(Tablero.tabla[i+1][j].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(Tablero.tabla[i+1][j-1].getBackground()==Color.darkGray){
                            vivos++;
                        }
                         if(vivos<2){
                                Tablero.mat1[i][j]=0;
                                vivos=0;
                            }else if(vivos==3){
                                Tablero.mat1[i][j]=1;
                                vivos=0;
                            }else if(vivos>3){
                                Tablero.mat1[i][j]=0;
                                vivos=0;
                            }
                         vivos=0;
                    }
                    //fin vorde vertical derecho
                    //////////////////////////////////////////////////////
                    ///////////inicio comparacines centrales
                    ///////////////////////////////////////////////////////
                    if(i>0 && i<Tablero.tabla.length-2 && j>0 && j<Tablero.tabla.length-2){
                        if(Tablero.tabla[i][j].getBackground()==Color.darkGray){
                            Tablero.mat1[i][j]=1;
                        }else{
                            Tablero.mat1[i][j]=0;
                        }
                        if(Tablero.tabla[i-1][j-1].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(Tablero.tabla[i-1][j].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(Tablero.tabla[i-1][j+1].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(Tablero.tabla[i][j-1].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(Tablero.tabla[i][j+1].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(Tablero.tabla[i+1][j].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(Tablero.tabla[i+1][j+1].getBackground()==Color.darkGray){
                            vivos++;
                        }
                        if(Tablero.tabla[i+1][j-1].getBackground()==Color.darkGray){
                            vivos++;
                        }
                         if(vivos<2){
                                Tablero.mat1[i][j]=0;
                                vivos=0;
                            }else if(vivos==3){
                                Tablero.mat1[i][j]=1;
                                vivos=0;
                            }else if(vivos>3){
                                Tablero.mat1[i][j]=0;
                                vivos=0;
                            }
                         vivos=0;
                    }
                    /////////////////////////////////////////////////////////
                }//fin primer for
            }//fin segundo for
            for(int i=0;i<Tablero.tabla.length;i++){
                System.out.println(" ");
            for(int j=0;j<Tablero.tabla[i].length;j++){
               System.out.print(" "+Tablero.mat1[i][j]+" ");
               if(Tablero.mat1[i][j]==1){
                  Tablero.tabla[i][j].setBackground(Color.darkGray);
               }else{
                  Tablero.tabla[i][j].setBackground(Color.white); 
               }    
            }
        }
            System.out.println(" ");
            for(int i=0;i<Tablero.tabla.length;i++){
            for(int j=0;j<Tablero.tabla[i].length;j++){
                Tablero.mat1[i][j]=0;      
            }
        }
         try{
            Thread.sleep(1000-10*(Tablero.n));
        } catch (InterruptedException ex) {
            Logger.getLogger(Tablero.class.getName()).log(Level.SEVERE, null, ex);
        }  
        }//fin while infinito x
    }//fin metodo run
}//fin del hilo